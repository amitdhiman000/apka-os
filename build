#!/bin/sh

build=built
compiler=gcc
assembler=nasm
linker=ld
opt="-Wall -O -fstrength-reduce -fomit-frame-pointer -nostdinc -fno-builtin  -I./kernel/include  -I./kernel/include/clib  -fno-strict-aliasing -fno-common -fno-stack-protector"

opt1="-Wall -O -fstrength-reduce -fomit-frame-pointer -nostdinc -fno-builtin  -I./kernel/include   -fno-strict-aliasing -fno-common -fno-stack-protector"

echo "==================="
echo "..Building Kernel.."
echo "==================="

#remove old files
rm  kernel.bin
rm  os.img
rm -r  $build/*.o


# Build C files

$compiler $opt -c  -o $build/kmain.o ./kernel/kmain.c 
$compiler $opt -c  -o $build/kconsol.o ./kernel/kconsol.c 
$compiler $opt -c  -o $build/kmem.o ./kernel/kmem.c 
$compiler $opt -c  -o $build/kio.o ./kernel/kio.c
$compiler $opt -c  -o $build/kgdt.o ./kernel/kgdt.c
$compiler $opt -c  -o $build/kidt.o ./kernel/kidt.c
$compiler $opt -c  -o $build/kisrs.o ./kernel/kisrs.c
$compiler $opt -c  -o $build/kirq.o ./kernel/kirq.c
$compiler $opt -c  -o $build/kkbd.o ./kernel/kkbd.c
$compiler $opt -c  -o $build/ktimer.o ./kernel/ktimer.c 
$compiler $opt -c  -o $build/system.o ./kernel/system.c

#compile c library
$compiler $opt -c  -o $build/stdio.o ./kernel/clib/stdio.c
$compiler $opt -c  -o $build/string.o ./kernel/clib/string.c
$compiler $opt -c  -o $build/ctype.o ./kernel/clib/ctype.c
#$compiler $opt -c  -o $build/video.o ./kernel/clib/video.c


# Build ASM files

nasm -f elf ./kernel/asm/loader.asm -o $build/loader.o
nasm -f elf ./kernel/asm/start.asm -o $build/start.o

# link 
$linker -T link.ld  $build/*.o

# to Put on floppy image
cp boot/os.img  os.img
#mounting on Floppy image
mkdir /media/test1
sudo mount -o loop os.img /media/test1
cp kernel.bin /media/test1
sudo umount /media/test1
rm -r /media/test1


echo "====================="
echo "..Building Finished.."
echo "====================="
